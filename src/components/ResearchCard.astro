---
/**
 * Props
 * - title:   string
 * - topic:   string | string[]
 * - date:    string
 * - summary: string
 * - links:   { href: string; label: string }[]
 */
const { title, topic, date, summary = '', links = [] } = Astro.props;

// normalize topics -> lower-case array, then CSV for data attribute
const topicsArr: string[] = (Array.isArray(topic) ? topic : [topic]).filter(Boolean);
const topicsCSV = topicsArr.map(t => String(t).toLowerCase()).join(',');
const hasMedia = Astro.slots.has('media');
---
<article class="research-card" data-topics={topicsCSV} data-date={date}>
  <div class="card-grid">
    <!-- LEFT: Square media (or placeholder) -->
    <div class="media-col">
      {hasMedia ? (
        <div class="embed-square media-fit">
          <slot name="media" />
        </div>
      ) : (
        <div class="embed-square placeholder">
          <div class="ph-wrap">
            <div class="ph-icon">â–£</div>
            <div class="ph-text">No media</div>
          </div>
        </div>
      )}
    </div>

    <!-- RIGHT: text -->
    <div class="text-col">
      <header class="meta">
        <div class="badges">
          {topicsArr.map((t) => <span class="pill">{t}</span>)}
        </div>
        {date && <time class="date">{date}</time>}
      </header>

      <h3 class="title">{title}</h3>

      {summary && <p class="summary">{summary}</p>}

      {links?.length > 0 && (
        <ul class="links">
          {links.map((l) => (
            <li><a href={l.href} target="_blank" rel="noopener noreferrer">{l.label}</a></li>
          ))}
        </ul>
      )}
    </div>
  </div>
</article>

<style>
  .research-card {
    max-width: 980px;
    margin: 1rem auto;
    padding: 14px;
    background: rgba(255,255,255,.04);
    border-radius: 14px;
    box-shadow: 0 0 0 1px rgba(255,255,255,.08) inset;
  }

  /* keep two columns even on mobile */
  .card-grid {
    display: grid;
    grid-template-columns: 1fr 1.3fr;
    gap: 14px;
  }

  .media-col { min-width: 0; }
  .text-col  { min-width: 0; display: grid; align-content: start; gap: .5rem; }

  /* square frame */
  .embed-square {
    position: relative;
    aspect-ratio: 1 / 1;
    width: 100%;
    max-width: 460px;
    border-radius: 12px;
    overflow: hidden;
    background: #000;
    box-shadow: 0 0 0 1px rgba(255,255,255,.08) inset;
  }

  /* ensure anything inside (iframe/img/video) fits without scrollbars */
  .media-fit :is(iframe, img, video) {
    width: 100%;
    height: 100%;
    display: block;
    border: 0;
    object-fit: contain;      /* letterbox/pillarbox inside square */
  }
  .media-fit iframe { overflow: hidden; }

  /* placeholder */
  .placeholder { display: grid; place-items: center; }
  .ph-wrap { text-align: center; color: rgba(255,255,255,.5); }
  .ph-icon { font-size: 38px; line-height: 1; }
  .ph-text { font-size: 12px; margin-top: 4px; letter-spacing: .06em; text-transform: uppercase; }

  /* pills (match TopicFilter) */
  .pill {
    display: inline-flex; align-items: center; justify-content: center;
    padding: 4px 10px;
    border-radius: 999px;
    font-size: 11px; line-height: 1;
    font-weight: 800;
    color: #0d1f1a;
    background: rgb(52 211 153);
    box-shadow: 0 0 0 1px rgba(0,0,0,.15) inset;
    white-space: nowrap;
  }
  .badges { display: flex; flex-wrap: wrap; gap: .35rem .45rem; }
  .meta { display: flex; align-items: center; gap: .5rem; }
  .date { margin-left: auto; font-size: 11px; opacity: .7; }

  .title {
    margin: 0;
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    font-size: 18px;
    letter-spacing: .02em;
    text-transform: uppercase;
  }
  .summary { margin: 0; color: rgba(240,255,244,.9); font-size: 14px; line-height: 1.45; }

  .links { list-style: none; margin: .25rem 0 0; padding: 0; display: grid; gap: .15rem; }
  .links a { color: rgb(52 211 153); text-decoration: underline; text-underline-offset: 2px; }
  .links a:hover { text-decoration-thickness: 2px; }
</style>
